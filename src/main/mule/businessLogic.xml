<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce"
	xmlns:workday="http://www.mulesoft.org/schema/mule/workday" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:batch="http://www.mulesoft.org/schema/mule/batch" xmlns:email="http://www.mulesoft.org/schema/mule/email"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/email http://www.mulesoft.org/schema/mule/email/current/mule-email.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/workday http://www.mulesoft.org/schema/mule/workday/current/mule-workday.xsd
http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd">

	<flow name="businessLogicFlow" doc:id="884f86c5-66e1-4701-bb9b-594c2a60abf3" >
		<ee:transform doc:name="Prepare Get Workers request" doc:id="0e2062da-4a79-471a-bbf5-80038e92ce9b">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/xml
ns ns0 urn:com.workday/bsvc
---
{
	ns0#Get_Workers_Request: {
		ns0#Request_Criteria: {
			ns0#Transaction_Log_Criteria_Data: {
				ns0#Transaction_Date_Range_Data: {
					ns0#Updated_From: p('migration.startDate'),
					ns0#Updated_Through: (now() - |PT6S|)
				}
			},
			ns0#Exclude_Inactive_Workers: true,
			ns0#Exclude_Employees: false,
			ns0#Exclude_Contingent_Workers: false
		},
		ns0#Response_Group: {
			ns0#Include_Reference: true,
			ns0#Include_Personal_Information: true,
			ns0#Include_User_Account: true
		}
	}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<workday:invoke service="Human_Resources" operation="Get_Workers" doc:name="Get Workers from Workday" doc:id="e0ba44f9-fbaa-4155-b81e-f3c463198536" config-ref="Workday_Config" />
		<ee:transform doc:name="Filter response" doc:id="29e11f39-d7ad-4e29-b095-3d7ea3d22f09" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
ns ns0 urn:com.workday/bsvc
---
(payload.body.ns0#Get_Workers_Response.ns0#Response_Data.*ns0#Worker
filter ($.ns0#Worker_Data.ns0#Personal_Data.ns0#Contact_Data.ns0#Email_Address_Data.ns0#Email_Address != null 
and $.ns0#Worker_Data.ns0#Personal_Data.ns0#Contact_Data.ns0#Email_Address_Data.ns0#Email_Address != ''))
distinctBy $.ns0#Worker_Data.ns0#Personal_Data.ns0#Contact_Data.ns0#Email_Address_Data.ns0#Email_Address]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<batch:job jobName="migrateObjectsBatch" doc:id="79b373e6-1aeb-43a9-9dfe-8ac0d2f31fdc" >
        <batch:process-records >
            <batch:step name="getUserFromSalesforce" doc:id="232087de-e311-49c1-a890-439c65ea1af2" >
					<ee:transform doc:name="Prepare Salesforce User" doc:id="95327bc6-8717-42f7-affb-db714e8dc3b1" >
						<ee:message >
							<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
{
	// Each Username should be UNIQUE even between different sandboxes of a single instance 
 	// If you are trying this kick with one instance and multiple sandboxes, please make sure that the target username is not the same as the original as a duplicated username error will come up 
	Username          : payload.Worker_Data.Personal_Data.Contact_Data.Email_Address_Data.Email_Address ++ ".target",
	LastName          : payload.Worker_Data.Personal_Data.Name_Data.Legal_Name_Data.Name_Detail_Data.Last_Name default "",
	FirstName         : payload.Worker_Data.Personal_Data.Name_Data.Legal_Name_Data.Name_Detail_Data.First_Name default "",
	Email             : if (payload.Worker_Data.Personal_Data.Contact_Data.Email_Address_Data != null) payload.Worker_Data.Personal_Data.Contact_Data.Email_Address_Data.Email_Address else null,
	Alias             : payload.Worker_Data.Personal_Data.Name_Data.Preferred_Name_Data.Name_Detail_Data.First_Name[0 to 2] ++ payload.Worker_Data.Personal_Data.Name_Data.Preferred_Name_Data.Name_Detail_Data.Last_Name[0 to 3],
	TimeZoneSidKey    : p('sfdc.timeZoneSidKey'),
	LocaleSidKey      : if (payload.Worker_Data.User_Account_Data != null and payload.Worker_Data.User_Account_Data.Locale_Reference != null) payload.Worker_Data.User_Account_Data.Locale_Reference.ID[-1].value else p('sfdc.localeSidKey'),
	EmailEncodingKey  : p('sfdc.emailEncodingKey'),
	
	// We map the profile IDs from SalesForce instance A to B, each profileId from the left (source instance) will be map to the one on the right (target instance) 
 	// You should change these IDs to the ones corresponding to your SalesForce instances profile IDs 
	ProfileId         : p('sfdc.profileId'),
	LanguageLocaleKey : if (payload.Worker_Data.User_Account_Data != null and payload.Worker_Data.User_Account_Data.Default_Display_Language_Reference != null) payload.Worker_Data.User_Account_Data.Default_Display_Language_Reference.ID[0 to -1] else p('sfdc.languageLocaleKey')
}]]></ee:set-payload>
						</ee:message>
					</ee:transform>
					<salesforce:query doc:name="Query User in Salesforce" doc:id="f307e364-2099-4d0d-ac50-8f5e5f7cf0c1" config-ref="Salesforce_Sfdc_config" target="UserInSFDC" targetValue="#[payload[0]]">
						<salesforce:salesforce-query >SELECT Id FROM User WHERE Email = ':email'</salesforce:salesforce-query>
						<salesforce:parameters ><![CDATA[#[output applicaton/java
---
{
	"email" : payload.Email
}]]]></salesforce:parameters>
					</salesforce:query>
					<ee:transform doc:name="Push Id to payload" doc:id="4f858c9f-88c0-4766-a818-333bebbd9ee3" >
						<ee:message >
							<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload ++ {(Id: vars.UserInSFDC.Id) if vars.UserInSFDC.Id != null}]]></ee:set-payload>
						</ee:message>
					</ee:transform>
            </batch:step>
            <batch:step name="upsertUsersInSalesforce" doc:id="78a74ab4-9b91-416d-985a-acda2ac377eb">
					<batch:aggregator doc:name="Batch Aggregator" doc:id="bd3d1bac-9abf-4d3d-85ed-ba93b05ece10" size="100">
						<ee:transform doc:name="Prepare payload for upsert" doc:id="79c11675-b3f7-4eef-bfaa-402d80a709dd">
						<ee:message>
							<ee:set-payload><![CDATA[%dw 2.0
output application/java
---
payload map 
{
	Id                : $.Id,
	Username          : $.Username,
	LastName          : $.LastName,
	FirstName         : $.FirstName,
	Email             : $.Email,
	Alias             : $.Alias,
	TimeZoneSidKey    : $.TimeZoneSidKey,
	LocaleSidKey      : $.LocaleSidKey,
	EmailEncodingKey  : $.EmailEncodingKey,
	ProfileId         : $.ProfileId,
	LanguageLocaleKey : $.LanguageLocaleKey
}]]></ee:set-payload>
						</ee:message>
					</ee:transform>
						<salesforce:upsert doc:name="Upsert users" doc:id="1af28f5d-ba5e-4af5-bda3-3bd0e736885c" config-ref="Salesforce_Sfdc_config" externalIdFieldName="Id" type="User"/>
					</batch:aggregator>
            </batch:step>
        </batch:process-records>
        <batch:on-complete >
            <scatter-gather doc:name="Scatter-Gather" doc:id="ef2964ef-0b85-4c6c-a5ee-b834df639e7b">
                <route>
                    <logger level="INFO" doc:name="Migration process has finished!" doc:id="b7575d38-7dbd-4602-9186-1bbb25234896" message="Migration process has finished!" />
                </route>
                <route>
                    <ee:transform doc:name="Prepare migration result email"
                                  doc:id="c84b4bc4-5a65-41c1-9d0c-f1ebd3d8db7a">
                        <ee:message>
                            <ee:set-payload><![CDATA[%dw 2.0
 output text/plain
 ---
 "Migration Report: \n"

 ++ "\n Time [milliseconds]: " 		++ payload.elapsedTimeInMillis!
 ++ "\n Total Records: "				++ payload.totalRecords!
 ++ "\n Successful Records: "		++ payload.successfulRecords!
 ++ "\n Failed Records: "			++ payload.failedRecords!
 ++ "\n Loaded Records: "			++ payload.loadedRecords!
 ++ "\n Processed Records: " 		++ payload.processedRecords!]]></ee:set-payload>
                        </ee:message>
                    </ee:transform>
                    <email:send config-ref="Gmail_SMTP" doc:name="Send migration result email"
                                doc:id="5896eaa9-dd10-47a2-a6fc-6319b11dbd06" fromAddress="${mail.from}"
                                subject="${mail.subject}">
                        <email:to-addresses>
                            <email:to-address value="${mail.to}" />
                        </email:to-addresses>
                    </email:send>
                </route>
            </scatter-gather>
        </batch:on-complete>
    </batch:job>
</flow>
<flow name="mainFlow" doc:id="7c0a5bef-b3d5-442f-bff3-10d038f69a5e" >
    <flow-ref doc:name="businessLogicFlow" doc:id="91360ede-4d71-44c7-9b64-8ee762e04ea0" name="businessLogicFlow"/>
    <error-handler >
        <on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="488b507d-e26c-4c56-8759-8bb4f6645d71" type="ANY">
            <flow-ref doc:name="errorHandlingFlow" doc:id="afdaf73c-0137-4d60-84f6-5c41234771a3" name="errorHandlingFlow" />
        </on-error-propagate>
    </error-handler>
</flow>
</mule>


        